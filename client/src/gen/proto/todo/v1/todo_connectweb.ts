// @generated by protoc-gen-connect-web v0.11.0 with parameter "target=ts"
// @generated from file proto/todo/v1/todo.proto (package todo.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateTodoRequest, DeleteTodoRequest, GetTodoRequest, ListTodosRequest, ListTodosResponse, Todo, UpdateTodoRequest } from "./todo_pb.js";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * Service definition
 *
 * @generated from service todo.v1.TodoService
 */
export const TodoService = {
  typeName: "todo.v1.TodoService",
  methods: {
    /**
     * Create a new todo
     *
     * @generated from rpc todo.v1.TodoService.CreateTodo
     */
    createTodo: {
      name: "CreateTodo",
      I: CreateTodoRequest,
      O: Todo,
      kind: MethodKind.Unary,
    },
    /**
     * Get a specific todo
     *
     * @generated from rpc todo.v1.TodoService.GetTodo
     */
    getTodo: {
      name: "GetTodo",
      I: GetTodoRequest,
      O: Todo,
      kind: MethodKind.Unary,
    },
    /**
     * List todos with pagination
     *
     * @generated from rpc todo.v1.TodoService.ListTodos
     */
    listTodos: {
      name: "ListTodos",
      I: ListTodosRequest,
      O: ListTodosResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update a todo
     *
     * @generated from rpc todo.v1.TodoService.UpdateTodo
     */
    updateTodo: {
      name: "UpdateTodo",
      I: UpdateTodoRequest,
      O: Todo,
      kind: MethodKind.Unary,
    },
    /**
     * Delete a todo
     *
     * @generated from rpc todo.v1.TodoService.DeleteTodo
     */
    deleteTodo: {
      name: "DeleteTodo",
      I: DeleteTodoRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

